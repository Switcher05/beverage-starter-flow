<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.vaadin.starter</groupId>
    <artifactId>beveragebuddy</artifactId>
    <name>Beverage Buddy App Starter for Vaadin Flow</name>
    <version>1.0-SNAPSHOT</version>
    <packaging>war</packaging>

    <properties>
        <maven.compiler.source>1.8</maven.compiler.source>
        <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <failOnMissingWebXml>false</failOnMissingWebXml>
        <docker.image.prefix>registry.gitlab.com</docker.image.prefix>
        <parentProject>switcher05/beverage-flow</parentProject>
        <server.port>8181</server.port>
        <vaadin.version>13.0-SNAPSHOT</vaadin.version>
    </properties>

    <repositories>
        <!-- Repository used by many Vaadin add-ons -->
        <repository>
            <id>Vaadin Directory</id>
            <url>http://maven.vaadin.com/vaadin-addons</url>
        </repository>
        <!-- Repository needed for the prerelease versions of Vaadin -->
        <repository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </repository>
        <!-- Repository needed for the snapshot versions of Vaadin -->
        <repository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <!-- Repository needed for the prerelease versions of Vaadin -->
        <pluginRepository>
            <id>vaadin-prereleases</id>
            <url>https://maven.vaadin.com/vaadin-prereleases</url>
        </pluginRepository>
        <!-- Repository needed for the snapshot versions of Vaadin -->
        <pluginRepository>
            <id>vaadin-snapshots</id>
            <url>https://oss.sonatype.org/content/repositories/vaadin-snapshots/</url>
        </pluginRepository>
    </pluginRepositories>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.vaadin</groupId>
                <artifactId>vaadin-bom</artifactId>
                <type>pom</type>
                <scope>import</scope>
                <version>${vaadin.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>com.vaadin</groupId>
            <artifactId>vaadin-core</artifactId>
        </dependency>

        <!-- Added to provide logging output as Flow uses -->
        <!-- the unbound SLF4J no-operation (NOP) logger implementation -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-simple</artifactId>
        </dependency>

        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
            <version>3.1.0</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-beanutils</groupId>
            <artifactId>commons-beanutils</artifactId>
            <version>1.9.2</version>
            <type>jar</type>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>9.4.14.v20181114</version>
                <configuration>
                    <scanIntervalSeconds>1</scanIntervalSeconds>
                </configuration>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>fabric8-maven-plugin</artifactId>
                <version>3.5.41</version>
                <configuration>
                    <verbose>true</verbose>
                    <dockerHost>tcp://localhost:2375</dockerHost>
                    <!--<pullSecret>gitlab-docker</pullSecret>-->
                    <images>
                        <image>
                            <!-- Replace your-project-name -->
                            <name>registry.gitlab.com/switcher05/beverage-flow:${project.version}</name>
                            <registry>${docker.image.prefix}</registry>
                            <build>
                                <!--<dockerFileDir>${project.basedir}</dockerFileDir>-->

                                <!-- This is the same FROM used in a Dockerfile -->
                                <from>fabric8/java-centos-openjdk8-jdk:1.5</from>
                                <maintainer>ryan@graymatterlimited.net</maintainer>
                                <tags>
                                    <tag>latest</tag>
                                    <tag>${project.version}</tag>
                                </tags>
                                <ports>
                                    <port>8181</port>
                                </ports>
                                <env>
                                    <JAVA_APP_DIR>/deployments</JAVA_APP_DIR>
                                    <CATALINA_OPTS>-Djava.security.egd=file:/dev/./urandom</CATALINA_OPTS>
                                </env>

                                <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                                <!--                                 <entryPoint>
                                                                     <exec>
                                                                         <arg>COPY maven /deployments/</arg>
                                                                     </exec>
                                                                 </entryPoint>-->

                                <assembly>
                                    <!-- This is a predefined assembly.xml that will only copy your final artifact to the Docker image -->
                                    <targetDir>/deployments</targetDir>
                                    <descriptorRef>artifact</descriptorRef>
                                </assembly>
                            </build>
                            <run>
                                <namingStrategy>alias</namingStrategy>
                                <ports>
                                    <port>8181:8181</port>
                                </ports>
                            </run>
                        </image>
                    </images>
                    <!--<enricher>-->
                    <!--<config>-->
                    <!--<f8-healthcheck-spring-boot>-->
                    <!--<timeoutSeconds>5</timeoutSeconds>-->
                    <!--<readinessProbeInitialDelaySeconds>30</readinessProbeInitialDelaySeconds>-->
                    <!--</f8-healthcheck-spring-boot>-->
                    <!--</config>-->
                    <!--</enricher>-->

                </configuration>
                <executions>
                    <execution>
                        <id>fmp</id>
                        <goals>
                            <goal>resource</goal>
                            <goal>helm</goal>
                            <goal>build</goal>
                            <!--<goal>push</goal>-->
                        </goals>
                    </execution>
                    <execution>
                        <id>docker-build</id>
                        <goals>
                            <goal>build</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.27.2</version>
                <configuration>
                    <skip>true</skip>

                    <verbose>true</verbose>
                    <dockerHost>tcp://localhost:2375</dockerHost>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <!-- Production mode can be activated with either property or profile -->
            <id>production-mode</id>
            <activation>
                <property>
                    <name>vaadin.productionMode</name>
                </property>
            </activation>

            <properties>
                <vaadin.productionMode>true</vaadin.productionMode>
            </properties>

            <dependencies>
                <dependency>
                    <groupId>com.vaadin</groupId>
                    <artifactId>flow-server-production-mode</artifactId>
                </dependency>
            </dependencies>

            <build>
                <plugins>
                    <plugin>
                        <groupId>com.vaadin</groupId>
                        <artifactId>vaadin-maven-plugin</artifactId>
                        <version>${vaadin.version}</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>copy-production-files</goal>
                                    <goal>package-for-production</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>

                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-war-plugin</artifactId>
                        <version>3.1.0</version>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>fabric8-maven-plugin</artifactId>
                        <version>3.5.41</version>
                        <configuration>
                            <verbose>true</verbose>
                            <dockerHost>tcp://localhost:2375</dockerHost>
                            <!--<pullSecret>gitlab-docker</pullSecret>-->
                            <images>
                                <image>
                                    <!-- Replace your-project-name -->
                                    <name>registry.gitlab.com/switcher05/beverage-flow:${project.version}</name>
                                    <registry>${docker.image.prefix}</registry>
                                    <build>
                                        <!--<dockerFileDir>${project.basedir}</dockerFileDir>-->

                                        <!-- This is the same FROM used in a Dockerfile -->
                                        <from>fabric8/java-centos-openjdk8-jdk:1.5</from>
                                        <maintainer>ryan@graymatterlimited.net</maintainer>
                                        <tags>
                                            <tag>latest</tag>
                                            <tag>${project.version}</tag>
                                        </tags>
                                        <ports>
                                            <port>8181</port>
                                        </ports>
                                        <env>
                                            <JAVA_APP_DIR>/deployments</JAVA_APP_DIR>
                                            <CATALINA_OPTS>-Djava.security.egd=file:/dev/./urandom</CATALINA_OPTS>
                                        </env>

                                        <!-- This is the same ENTRYPOINT used in a Dockerfile -->
                                        <!--                                 <entryPoint>
                                                                             <exec>
                                                                                 <arg>COPY maven /deployments/</arg>
                                                                             </exec>
                                                                         </entryPoint>-->

                                        <assembly>
                                            <!-- This is a predefined assembly.xml that will only copy your final artifact to the Docker image -->
                                            <targetDir>/deployments</targetDir>
                                            <descriptorRef>artifact</descriptorRef>
                                        </assembly>
                                    </build>
                                    <run>
                                        <namingStrategy>alias</namingStrategy>
                                        <ports>
                                            <port>8181:8181</port>
                                        </ports>
                                    </run>
                                </image>
                            </images>
                            <!--<enricher>-->
                            <!--<config>-->
                            <!--<f8-healthcheck-spring-boot>-->
                            <!--<timeoutSeconds>5</timeoutSeconds>-->
                            <!--<readinessProbeInitialDelaySeconds>30</readinessProbeInitialDelaySeconds>-->
                            <!--</f8-healthcheck-spring-boot>-->
                            <!--</config>-->
                            <!--</enricher>-->

                        </configuration>
                        <executions>
                            <execution>
                                <id>fmp</id>
                                <goals>
                                    <goal>resource</goal>
                                    <goal>helm</goal>
                                    <goal>build</goal>
                                    <!--<goal>push</goal>-->
                                </goals>
                            </execution>
                            <execution>
                                <id>docker-build</id>
                                <goals>
                                    <goal>build</goal>
                                </goals>
                            </execution>
                        </executions>
                    </plugin>
                    <plugin>
                        <groupId>io.fabric8</groupId>
                        <artifactId>docker-maven-plugin</artifactId>
                        <version>0.27.2</version>
                        <configuration>
                            <skip>true</skip>

                            <verbose>true</verbose>
                            <dockerHost>tcp://localhost:2375</dockerHost>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
